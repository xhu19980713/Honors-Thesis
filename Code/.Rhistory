colnames(df)[3]="age.group"
colnames(df)[4]="age"
colnames(df)[43]="weekly.wage"
colnames(df)[14]="occupation"
colnames(df)[18]="event.date"
colnames(df)[24]="hired.date"
colnames(df)[2]="site"
colnames(df)
df$event.year=as.numeric(substr(as.character(df$event.date),1,4))
df$age=as.numeric(df$age)
df$weekly.wage=as.numeric(gsub(",", "", substr(as.character(df$weekly.wage),2,nchar(df$weekly.wage))))
df=subset(df,event.year>=2000)
df=subset(df,site!=c("GRENADA","MONESSEN PLANT"))
class(df)
df$experience= as.Date(gsub("-","/",as.character(df$event.date)),format="%Y/%m/%d")-as.Date(gsub("-","/",as.character(df$hired.date)),format="%Y/%m/%d")
write.csv(df$experience, file = "experience.csv",append=F)
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(ggplot2)
library(tidyverse)
#Total Incurred
df = read_excel("Workers Comp Data Clean_CMU V.3.xlsx",2)
colnames(df)[26]="injury.damage.group"
colnames(df)[44]="comp.med.paid"
colnames(df)[3]="age.group"
colnames(df)[4]="age"
colnames(df)[43]="weekly.wage"
colnames(df)[14]="occupation"
colnames(df)[18]="event.date"
colnames(df)[24]="hired.date"
colnames(df)[2]="site"
colnames(df)
df$event.year=as.numeric(substr(as.character(df$event.date),1,4))
df$age=as.numeric(df$age)
df$weekly.wage=as.numeric(gsub(",", "", substr(as.character(df$weekly.wage),2,nchar(df$weekly.wage))))
df=subset(df,event.year>=2000)
df=subset(df,site!=c("GRENADA","MONESSEN PLANT"))
class(df)
df$experience= as.Date(gsub("-","/",as.character(df$event.date)),format="%Y/%m/%d")-as.Date(gsub("-","/",as.character(df$hired.date)),format="%Y/%m/%d")
write.csv(df$experience, file = "experience.csv",append=F)
library(readxl)
library(ggplot2)
library(tidyverse)
#Total Incurred
df = read_excel("Workers Comp Data Clean_CMU V.3.xlsx",2)
colnames(df)[26]="injury.damage.group"
colnames(df)[44]="comp.med.paid"
colnames(df)[3]="age.group"
colnames(df)[4]="age"
colnames(df)[43]="weekly.wage"
colnames(df)[14]="occupation"
colnames(df)[18]="event.date"
colnames(df)[24]="hired.date"
colnames(df)[2]="site"
colnames(df)
df$event.year=as.numeric(substr(as.character(df$event.date),1,4))
df$age=as.numeric(df$age)
df$weekly.wage=as.numeric(gsub(",", "", substr(as.character(df$weekly.wage),2,nchar(df$weekly.wage))))
df=subset(df,event.year>=2000)
df=subset(df,site!=c("GRENADA","MONESSEN PLANT"))
class(df)
df$experience= as.Date(gsub("-","/",as.character(df$event.date)),format="%Y/%m/%d")-as.Date(gsub("-","/",as.character(df$hired.date)),format="%Y/%m/%d")
write.csv(df$experience, file = "experience.csv",append=F)
#determine level of severity if different kinds of Injury/Damage Group
assertthat::assert_that(utils::packageVersion("tidyr") > "0.8.99")
df1 = df %>%
select(comp.med.paid,injury.damage.group) %>%
group_by(injury.damage.group) %>%
summarise(.,mean.cost=mean(comp.med.paid)) %>%
arrange(desc(mean.cost))
df1
df1$indicator=ifelse(df1$mean.cost>10000,1,0)
len = dim(df)[1]
ph=vector(length=len)
ph2=vector(length=len)
for (i in 1:len){
for (j in 1:(dim(df1)[1])){
if (df$injury.damage.group[i]==df1$injury.damage.group[j]){
ph[i]=df1$indicator[j]
ph2[i]=df1$mean.cost[j]}
}
}
df$indicator=ph
df$mean.cost=ph2
table(df$indicator)
jpeg("rplot.jpg", width = 1680, height =1080)
ggplot(df1,aes(x=reorder(injury.damage.group,mean.cost),y=mean.cost,fill=mean.cost))+
geom_bar(stat="identity")+
theme(axis.text.x=element_text(angle=45, hjust=1,size=20),axis.text.y=element_text(size=20))
dev.off()
#determine level of severity if different kinds of Injury/Damage Group
assertthat::assert_that(utils::packageVersion("tidyr") > "0.8.99")
df1 = df %>%
select(comp.med.paid,injury.damage.group) %>%
group_by(injury.damage.group) %>%
summarise(.,mean.cost=mean(comp.med.paid)) %>%
arrange(desc(mean.cost))
df1
df1$indicator=ifelse(df1$mean.cost>10000,1,0)
len = dim(df)[1]
ph=vector(length=len)
ph2=vector(length=len)
for (i in 1:len){
for (j in 1:(dim(df1)[1])){
if (df$injury.damage.group[i]==df1$injury.damage.group[j]){
ph[i]=df1$indicator[j]
ph2[i]=df1$mean.cost[j]}
}
}
df$indicator=ph
df$mean.cost=ph2
table(df$indicator)
jpeg("rplot.jpg", width = 1680, height =1080)
ggplot(df1,aes(x=reorder(injury.damage.group,mean.cost),y=mean.cost,fill=mean.cost))+
geom_bar(stat="identity")+
theme(axis.text.x=element_text(angle=45, hjust=1,size=20),axis.text.y=element_text(size=20))
dev.off()
#determine if the cost varies by a lot for each group
t.test.sub=function(x){
t = ifelse(length(na.omit(x))>1,(t.test(x,na.rm=TRUE))[["p.value"]],12)
return (round(t,3))
}
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
df3 = df %>%
select(comp.med.paid,injury.damage.group) %>%
group_by(injury.damage.group) %>%
summarise(mean.cost=mean(comp.med.paid),mode=getmode(comp.med.paid),median=median(comp.med.paid))
df4 = df %>%
select(comp.med.paid,injury.damage.group)
ggplot(df4, aes(x=comp.med.paid, fill=injury.damage.group, color=injury.damage.group)) +
geom_histogram(position="identity",binwidth = 1000)+ theme(legend.position="bottom")
df3
#determine level of severity if different kinds of Injury/Damage Group
assertthat::assert_that(utils::packageVersion("tidyr") > "0.8.99")
df1 = df %>%
select(comp.med.paid,injury.damage.group) %>%
group_by(injury.damage.group) %>%
summarise(.,mean.cost=mean(comp.med.paid)) %>%
arrange(desc(mean.cost))
write.csv(df1, file = "condition_by_cost.csv",append=F)
df1$indicator=ifelse(df1$mean.cost>10000,1,0)
len = dim(df)[1]
ph=vector(length=len)
ph2=vector(length=len)
for (i in 1:len){
for (j in 1:(dim(df1)[1])){
if (df$injury.damage.group[i]==df1$injury.damage.group[j]){
ph[i]=df1$indicator[j]
ph2[i]=df1$mean.cost[j]}
}
}
df$indicator=ph
df$mean.cost=ph2
table(df$indicator)
jpeg("rplot.jpg", width = 1680, height =1080)
ggplot(df1,aes(x=reorder(injury.damage.group,mean.cost),y=mean.cost,fill=mean.cost))+
geom_bar(stat="identity")+
theme(axis.text.x=element_text(angle=45, hjust=1,size=20),axis.text.y=element_text(size=20))
dev.off()
#determine level of severity if different kinds of Injury/Damage Group
assertthat::assert_that(utils::packageVersion("tidyr") > "0.8.99")
df1 = df %>%
select(comp.med.paid,injury.damage.group) %>%
group_by(injury.damage.group) %>%
summarise(.,mean.cost=mean(comp.med.paid)) %>%
arrange(desc(mean.cost))
write.csv(df1, file = "condition_by_cost.csv",append=F)
df1$indicator=ifelse(df1$mean.cost>10000,1,0)
len = dim(df)[1]
ph=vector(length=len)
ph2=vector(length=len)
for (i in 1:len){
for (j in 1:(dim(df1)[1])){
if (df$injury.damage.group[i]==df1$injury.damage.group[j]){
ph[i]=df1$indicator[j]
ph2[i]=df1$mean.cost[j]}
}
}
df$indicator=ph
df$mean.cost=ph2
table(df$indicator)
jpeg("rplot.jpg", width = 1680, height =1080)
ggplot(df1,aes(x=reorder(injury.damage.group,mean.cost),y=mean.cost,fill=mean.cost))+
geom_bar(stat="identity")+
theme(axis.text.x=element_text(angle=45, hjust=1,size=20),axis.text.y=element_text(size=20))
dev.off()
df2
#determine level of severity if different kinds of Injury/Damage Group
assertthat::assert_that(utils::packageVersion("tidyr") > "0.8.99")
df1 = df %>%
select(comp.med.paid,injury.damage.group) %>%
group_by(injury.damage.group) %>%
summarise(.,mean.cost=mean(comp.med.paid)) %>%
arrange(desc(mean.cost))
write.csv(df1, file = "condition_by_cost.csv",append=F)
df1$indicator=ifelse(df1$mean.cost>10000,1,0)
len = dim(df)[1]
ph=vector(length=len)
ph2=vector(length=len)
for (i in 1:len){
for (j in 1:(dim(df1)[1])){
if (df$injury.damage.group[i]==df1$injury.damage.group[j]){
ph[i]=df1$indicator[j]
ph2[i]=df1$mean.cost[j]}
}
}
df$indicator=ph
df$mean.cost=ph2
table(df$indicator)
jpeg("rplot.jpg", width = 1680, height =1080)
ggplot(df1,aes(x=reorder(injury.damage.group,mean.cost),y=mean.cost,fill=mean.cost))+
geom_bar(stat="identity")+
theme(axis.text.x=element_text(angle=45, hjust=1,size=20),axis.text.y=element_text(size=20))
dev.off()
df1
library(readxl)
library(ggplot2)
library(tidyverse)
#Total Incurred
df = read_excel("Workers Comp Data Clean_CMU V.3.xlsx",2)
colnames(df)
colnames(df)[26]="injury.damage.group"
colnames(df)[44]="comp.med.paid"
colnames(df)[3]="age.group"
colnames(df)[4]="age"
colnames(df)[43]="weekly.wage"
colnames(df)[14]="occupation"
colnames(df)[18]="event.date"
colnames(df)[24]="hired.date"
colnames(df)[2]="site"
df$event.year=as.numeric(substr(as.character(df$event.date),1,4))
df$age=as.numeric(df$age)
df$weekly.wage=as.numeric(gsub(",", "", substr(as.character(df$weekly.wage),2,nchar(df$weekly.wage))))
df=subset(df,event.year>=2000)
df=subset(df,site!=c("GRENADA","MONESSEN PLANT"))
class(df)
df$experience= as.Date(gsub("-","/",as.character(df$event.date)),format="%Y/%m/%d")-as.Date(gsub("-","/",as.character(df$hired.date)),format="%Y/%m/%d")
write.csv(df$experience, file = "experience.csv",append=F)
library(readxl)
library(ggplot2)
library(tidyverse)
#Total Incurred
df = read_excel("Workers Comp Data Clean_CMU V.3.xlsx",2)
colnames(df)
colnames(df)[26]="injury.damage.group"
colnames(df)[34]="comp.med.paid"
colnames(df)[3]="age.group"
colnames(df)[4]="age"
colnames(df)[43]="weekly.wage"
colnames(df)[14]="occupation"
colnames(df)[18]="event.date"
colnames(df)[24]="hired.date"
colnames(df)[2]="site"
df$event.year=as.numeric(substr(as.character(df$event.date),1,4))
df$age=as.numeric(df$age)
df$weekly.wage=as.numeric(gsub(",", "", substr(as.character(df$weekly.wage),2,nchar(df$weekly.wage))))
df=subset(df,event.year>=2000)
df=subset(df,site!=c("GRENADA","MONESSEN PLANT"))
class(df)
df$experience= as.Date(gsub("-","/",as.character(df$event.date)),format="%Y/%m/%d")-as.Date(gsub("-","/",as.character(df$hired.date)),format="%Y/%m/%d")
write.csv(df$experience, file = "experience.csv",append=F)
library(readxl)
library(ggplot2)
library(tidyverse)
#Total Incurred
df = read_excel("Workers Comp Data Clean_CMU V.3.xlsx",2)
colnames(df)
colnames(df)[26]="injury.damage.group"
colnames(df)[34]="comp.med.paid"
colnames(df)[3]="age.group"
colnames(df)[4]="age"
colnames(df)[43]="weekly.wage"
colnames(df)[14]="occupation"
colnames(df)[18]="event.date"
colnames(df)[24]="hired.date"
colnames(df)[2]="site"
df$event.year=as.numeric(substr(as.character(df$event.date),1,4))
df$age=as.numeric(df$age)
df$weekly.wage=as.numeric(gsub(",", "", substr(as.character(df$weekly.wage),2,nchar(df$weekly.wage))))
df=subset(df,event.year>=2000)
df=subset(df,site!=c("GRENADA","MONESSEN PLANT"))
class(df)
df$experience= as.Date(gsub("-","/",as.character(df$event.date)),format="%Y/%m/%d")-as.Date(gsub("-","/",as.character(df$hired.date)),format="%Y/%m/%d")
write.csv(df$experience, file = "experience.csv",append=F)
library(readxl)
library(ggplot2)
library(tidyverse)
#Total Incurred
df = read_excel("Workers Comp Data Clean_CMU V.3.xlsx",2)
colnames(df)
colnames(df)[26]="injury.damage.group"
colnames(df)[34]="comp.med.paid"
colnames(df)[3]="age.group"
colnames(df)[4]="age"
colnames(df)[43]="weekly.wage"
colnames(df)[14]="occupation"
colnames(df)[18]="event.date"
colnames(df)[24]="hired.date"
colnames(df)[2]="site"
df$event.year=as.numeric(substr(as.character(df$event.date),1,4))
df$age=as.numeric(df$age)
df$weekly.wage=as.numeric(gsub(",", "", substr(as.character(df$weekly.wage),2,nchar(df$weekly.wage))))
df=subset(df,event.year>=2000)
df=subset(df,site!=c("GRENADA","MONESSEN PLANT"))
class(df)
df$experience= as.Date(gsub("-","/",as.character(df$event.date)),format="%Y/%m/%d")-as.Date(gsub("-","/",as.character(df$hired.date)),format="%Y/%m/%d")
write.csv(df$experience, file = "experience.csv",append=F)
#determine level of severity if different kinds of Injury/Damage Group
assertthat::assert_that(utils::packageVersion("tidyr") > "0.8.99")
df1 = df %>%
select(comp.med.paid,injury.damage.group) %>%
group_by(injury.damage.group) %>%
summarise(.,mean.cost=mean(comp.med.paid)) %>%
arrange(desc(mean.cost))
write.csv(df1, file = "condition_by_cost.csv",append=F)
df1$indicator=ifelse(df1$mean.cost>10000,1,0)
len = dim(df)[1]
ph=vector(length=len)
ph2=vector(length=len)
for (i in 1:len){
for (j in 1:(dim(df1)[1])){
if (df$injury.damage.group[i]==df1$injury.damage.group[j]){
ph[i]=df1$indicator[j]
ph2[i]=df1$mean.cost[j]}
}
}
df$indicator=ph
df$mean.cost=ph2
table(df$indicator)
jpeg("rplot.jpg", width = 1680, height =1080)
ggplot(df1,aes(x=reorder(injury.damage.group,mean.cost),y=mean.cost,fill=mean.cost))+
geom_bar(stat="identity")+
theme(axis.text.x=element_text(angle=45, hjust=1,size=20),axis.text.y=element_text(size=20))
dev.off()
df1
library(readxl)
library(ggplot2)
library(tidyverse)
#Total Incurred
df = read_excel("Workers Comp Data Clean_CMU V.3.xlsx",2)
colnames(df)
colnames(df)[26]="injury.damage.group"
colnames(df)[44]="comp.med.paid"
colnames(df)[3]="age.group"
colnames(df)[4]="age"
colnames(df)[43]="weekly.wage"
colnames(df)[14]="occupation"
colnames(df)[18]="event.date"
colnames(df)[24]="hired.date"
colnames(df)[2]="site"
df$event.year=as.numeric(substr(as.character(df$event.date),1,4))
df$age=as.numeric(df$age)
df$weekly.wage=as.numeric(gsub(",", "", substr(as.character(df$weekly.wage),2,nchar(df$weekly.wage))))
df=subset(df,event.year>=2000)
df=subset(df,site!=c("GRENADA","MONESSEN PLANT"))
class(df)
df$experience= as.Date(gsub("-","/",as.character(df$event.date)),format="%Y/%m/%d")-as.Date(gsub("-","/",as.character(df$hired.date)),format="%Y/%m/%d")
write.csv(df$experience, file = "experience.csv",append=F)
#determine level of severity if different kinds of Injury/Damage Group
assertthat::assert_that(utils::packageVersion("tidyr") > "0.8.99")
df1 = df %>%
select(comp.med.paid,injury.damage.group) %>%
group_by(injury.damage.group) %>%
summarise(.,mean.cost=mean(comp.med.paid)) %>%
arrange(desc(mean.cost))
write.csv(df1, file = "condition_by_cost.csv",append=F)
df1$indicator=ifelse(df1$mean.cost>10000,1,0)
len = dim(df)[1]
ph=vector(length=len)
ph2=vector(length=len)
for (i in 1:len){
for (j in 1:(dim(df1)[1])){
if (df$injury.damage.group[i]==df1$injury.damage.group[j]){
ph[i]=df1$indicator[j]
ph2[i]=df1$mean.cost[j]}
}
}
df$indicator=ph
df$mean.cost=ph2
table(df$indicator)
jpeg("rplot.jpg", width = 1680, height =1080)
ggplot(df1,aes(x=reorder(injury.damage.group,mean.cost),y=mean.cost,fill=mean.cost))+
geom_bar(stat="identity")+
theme(axis.text.x=element_text(angle=45, hjust=1,size=20),axis.text.y=element_text(size=20))
dev.off()
df1
library(readxl)
library(ggplot2)
library(tidyverse)
#Total Incurred
df = read_excel("Workers Comp Data Clean_CMU V.3.xlsx",2)
colnames(df)
colnames(df)[26]="injury.damage.group"
colnames(df)[44]="comp.med.paid"
colnames(df)[3]="age.group"
colnames(df)[4]="age"
colnames(df)[43]="weekly.wage"
colnames(df)[14]="occupation"
colnames(df)[18]="event.date"
colnames(df)[24]="hired.date"
colnames(df)[2]="site"
colnames(df)[31]="legal"
df$comp.med.paid = df$comp.med.paid -df$legal
df$event.year=as.numeric(substr(as.character(df$event.date),1,4))
df$age=as.numeric(df$age)
df$weekly.wage=as.numeric(gsub(",", "", substr(as.character(df$weekly.wage),2,nchar(df$weekly.wage))))
df=subset(df,event.year>=2000)
df=subset(df,site!=c("GRENADA","MONESSEN PLANT"))
class(df)
df$experience= as.Date(gsub("-","/",as.character(df$event.date)),format="%Y/%m/%d")-as.Date(gsub("-","/",as.character(df$hired.date)),format="%Y/%m/%d")
write.csv(df$experience, file = "experience.csv",append=F)
library(readxl)
library(ggplot2)
library(tidyverse)
#Total Incurred
df = read_excel("Workers Comp Data Clean_CMU V.3.xlsx",2)
colnames(df)
colnames(df)[26]="injury.damage.group"
colnames(df)[44]="comp.med.paid"
colnames(df)[3]="age.group"
colnames(df)[4]="age"
colnames(df)[43]="weekly.wage"
colnames(df)[14]="occupation"
colnames(df)[18]="event.date"
colnames(df)[24]="hired.date"
colnames(df)[2]="site"
colnames(df)[31]="legal"
df$comp.med.paid = df$comp.med.paid -df$legal
df$event.year=as.numeric(substr(as.character(df$event.date),1,4))
df$age=as.numeric(df$age)
df$weekly.wage=as.numeric(gsub(",", "", substr(as.character(df$weekly.wage),2,nchar(df$weekly.wage))))
df=subset(df,event.year>=2000)
df=subset(df,site!=c("GRENADA","MONESSEN PLANT"))
class(df)
df$experience= as.Date(gsub("-","/",as.character(df$event.date)),format="%Y/%m/%d")-as.Date(gsub("-","/",as.character(df$hired.date)),format="%Y/%m/%d")
write.csv(df$experience, file = "experience.csv",append=F)
#determine level of severity if different kinds of Injury/Damage Group
assertthat::assert_that(utils::packageVersion("tidyr") > "0.8.99")
df1 = df %>%
select(comp.med.paid,injury.damage.group) %>%
group_by(injury.damage.group) %>%
summarise(.,mean.cost=mean(comp.med.paid)) %>%
arrange(desc(mean.cost))
write.csv(df1, file = "condition_by_cost.csv",append=F)
df1$indicator=ifelse(df1$mean.cost>10000,1,0)
len = dim(df)[1]
ph=vector(length=len)
ph2=vector(length=len)
for (i in 1:len){
for (j in 1:(dim(df1)[1])){
if (df$injury.damage.group[i]==df1$injury.damage.group[j]){
ph[i]=df1$indicator[j]
ph2[i]=df1$mean.cost[j]}
}
}
df$indicator=ph
df$mean.cost=ph2
table(df$indicator)
jpeg("rplot.jpg", width = 1680, height =1080)
ggplot(df1,aes(x=reorder(injury.damage.group,mean.cost),y=mean.cost,fill=mean.cost))+
geom_bar(stat="identity")+
theme(axis.text.x=element_text(angle=45, hjust=1,size=20),axis.text.y=element_text(size=20))
dev.off()
df1
table(df1$indicator)
knitr::opts_chunk$set(echo = TRUE)
dt = data.frame(c(14,561),c(4,813))
colnames(dt)=c("Y=0","Y=1")
rownames(dt)=c("Prediction=0","Prediction=1")
kable(dt,caption = "Prediction Accuracy: 0.5941", booktabs = T) %>% kable_styling(latex_options=c("hold_position"), position = "center")
library(knitr)
library(kableExtra)
library(gridExtra)
library(wesanderson)
library(ggpubr)
library(patchwork)
library(np)
library(FNN)
library(lubridate)
library(RColorBrewer)
dt = data.frame(c(14,561),c(4,813))
colnames(dt)=c("Y=0","Y=1")
rownames(dt)=c("Prediction=0","Prediction=1")
kable(dt,caption = "Prediction Accuracy: 0.5941", booktabs = T) %>% kable_styling(latex_options=c("hold_position"), position = "center")
knitr::opts_chunk$set(echo = TRUE)
install.packages("UScensus2000",dependencies=True)
install.packages("UScensus2000add",dependencies = True)
library("UScensus2000")
install.packages("UScensus2000",dependencies=True)
install.packages("UScensus2000add",dependencies = True)
library("UScensus2000")
install.packages("UScensus2000",dependencies=True)
install.packages("UScensus2000add",dependencies = True)
install.packages("Rtools")
install.packages("Rtools")
install.packages("Rtools")
install.Rtools()
install.Rtools()
install.packages(c("backports", "bit", "bit64", "blob", "boot", "broom", "callr", "car", "carData", "caret", "class", "cli", "covr", "crosstalk", "cubature", "data.table", "dbplyr", "devtools", "digest", "dplyr", "DT", "ellipsis", "estimatr", "forcats", "foreach", "fs", "gam", "GGally", "ggplot2", "ggpubr", "git2r", "glue", "gower", "haven", "htmltools", "httpuv", "httr", "jsonlite", "KernSmooth", "knitr", "later", "lattice", "lfe", "lifecycle", "lme4", "lubridate", "maptools", "MASS", "mime", "modelr", "nlme", "nloptr", "np", "openssl", "openxlsx", "patchwork", "pillar", "pkgbuild", "pkgload", "plotfunctions", "plyr", "prettyunits", "pROC", "processx", "promises", "ps", "purrr", "quantreg", "Rcpp", "recipes", "remotes", "reshape2", "rex", "rJava", "rlang", "rmarkdown", "roxygen2", "rstudioapi", "rversions", "rvest", "scales", "shiny", "sp", "SQUAREM", "stringi", "survival", "sys", "TeachingDemos", "testthat", "tibble", "tidymv", "tidyr", "tidyselect", "tinytex", "usethis", "vctrs", "withr", "writexl", "xfun", "xgboost", "xml2", "yaml", "zip", "zoo"))
install.packages(c("backports", "bit", "bit64", "blob", "boot", "broom", "callr", "car", "carData", "caret", "class", "cli", "covr", "crosstalk", "cubature", "data.table", "dbplyr", "devtools", "digest", "dplyr", "DT", "ellipsis", "estimatr", "forcats", "foreach", "fs", "gam", "GGally", "ggplot2", "ggpubr", "git2r", "glue", "gower", "haven", "htmltools", "httpuv", "httr", "jsonlite", "KernSmooth", "knitr", "later", "lattice", "lfe", "lifecycle", "lme4", "lubridate", "maptools", "MASS", "mime", "modelr", "nlme", "nloptr", "np", "openssl", "openxlsx", "patchwork", "pillar", "pkgbuild", "pkgload", "plotfunctions", "plyr", "prettyunits", "pROC", "processx", "promises", "ps", "purrr", "quantreg", "Rcpp", "recipes", "remotes", "reshape2", "rex", "rJava", "rlang", "rmarkdown", "roxygen2", "rstudioapi", "rversions", "rvest", "scales", "shiny", "sp", "SQUAREM", "stringi", "survival", "sys", "TeachingDemos", "testthat", "tibble", "tidymv", "tidyr", "tidyselect", "tinytex", "usethis", "vctrs", "withr", "writexl", "xfun", "xgboost", "xml2", "yaml", "zip", "zoo"))
install.packages(c("backports", "bit", "bit64", "blob", "boot", "broom", "callr", "car", "carData", "caret", "class", "cli", "covr", "crosstalk", "cubature", "data.table", "dbplyr", "devtools", "digest", "dplyr", "DT", "ellipsis", "estimatr", "forcats", "foreach", "fs", "gam", "GGally", "ggplot2", "ggpubr", "git2r", "glue", "gower", "haven", "htmltools", "httpuv", "httr", "jsonlite", "KernSmooth", "knitr", "later", "lattice", "lfe", "lifecycle", "lme4", "lubridate", "maptools", "MASS", "mime", "modelr", "nlme", "nloptr", "np", "openssl", "openxlsx", "patchwork", "pillar", "pkgbuild", "pkgload", "plotfunctions", "plyr", "prettyunits", "pROC", "processx", "promises", "ps", "purrr", "quantreg", "Rcpp", "recipes", "remotes", "reshape2", "rex", "rJava", "rlang", "rmarkdown", "roxygen2", "rstudioapi", "rversions", "rvest", "scales", "shiny", "sp", "SQUAREM", "stringi", "survival", "sys", "TeachingDemos", "testthat", "tibble", "tidymv", "tidyr", "tidyselect", "tinytex", "usethis", "vctrs", "withr", "writexl", "xfun", "xgboost", "xml2", "yaml", "zip", "zoo"))
knitr::opts_chunk$set(echo = TRUE)
Sys.getenv("PATH")
knitr::opts_chunk$set(echo = TRUE)
PATH="${RTOOLS40_HOME}\usr\bin;${PATH}"
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${C:\rtools40\usr\bin\make.exe}"', con = "~/.Renviron")
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${make.exe}"', con = "~/.Renviron")
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
